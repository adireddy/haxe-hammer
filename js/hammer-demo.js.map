{
"version":3,
"file":"hammer-demo.js",
"sourceRoot":"file:///",
"sources":["/projects/haxe-hammer/sample/Main.hx"],
"sourcesContent":["import hammer.GestureInteractionData;\nimport hammer.Hammer;\nimport hammer.Manager;\nimport hammer.recognizers.Pan;\nimport hammer.recognizers.Pinch;\nimport hammer.recognizers.Rotate;\nimport hammer.recognizers.Tap;\nimport js.Browser;\nimport js.html.HtmlElement;\n\nclass Main {\n\n\tpublic function new() {\n\t\tvar el:HtmlElement = cast Browser.document.getElementById(\"myElement\");\n\n\t\tvar mc = new Hammer(el);\n\n\t\tmc.on(\"panleft panright tap press\", function(ev:GestureInteractionData) {\n\t\t\tel.textContent = ev.type + \" gesture detected.\";\n\t\t});\n\n\t\tvar stage:HtmlElement = cast Browser.document.getElementById(\"stage\");\n\t\tvar manager:Manager = new Manager(stage);\n\n\t\tvar pan = new Pan();\n\t\tvar rotate = new Rotate();\n\t\tvar pinch = new Pinch();\n\t\tvar tap = new Tap({\n\t\t\ttaps: 1\n\t\t});\n\t\tvar doubleTap = new Tap({\n\t\t\tevent: \"doubletap\",\n\t\t\ttaps: 2\n\t\t});\n\n\t\trotate.recognizeWith([pan]);\n\t\tpinch.recognizeWith([rotate, pan]);\n\t\tdoubleTap.recognizeWith([tap]);\n\t\ttap.requireFailure([doubleTap]);\n\n\t\tmanager.add(pan);\n\t\tmanager.add(rotate);\n\t\tmanager.add(pinch);\n\t\tmanager.add(doubleTap);\n\t\tmanager.add(tap);\n\n\t\tvar liveScale = 1;\n\t\tvar currentRotation = 0;\n\t\tmanager.on(\"rotatemove\", function(e:GestureInteractionData) {\n\t\t\tvar rotation = currentRotation + Math.round(liveScale * e.rotation);\n\t\t\tstage.style.transform = \"rotate(\" + rotation + \"deg)\";\n\t\t});\n\t\tmanager.on(\"rotateend\", function(e:GestureInteractionData) {\n\t\t\tcurrentRotation += Math.round(e.rotation);\n\t\t});\n\n\t\tvar colors = [\n\t\t\t[20, 187, 95],\n\t\t\t[20, 95, 187],\n\t\t\t[187, 95, 20],\n\t\t\t[187, 20, 95],\n\t\t\t[95, 20, 187],\n\t\t\t[95, 187, 20]\n\t\t];\n\n\t\tvar currentColorIndex = 0;\n\t\tmanager.on(\"tap\", function(e) {\n\t\t\tcurrentColorIndex++;\n\t\t\tif (currentColorIndex >= colors.length) {\n\t\t\t\tcurrentColorIndex = 0;\n\t\t\t}\n\t\t\tstage.style.backgroundColor = makeColor(colors[currentColorIndex]);\n\t\t\tstage.style.borderColor = makeColor(colors[currentColorIndex], 0.85);\n\t\t});\n\t}\n\n\tfunction mult(a:Float, b:Float):Float {\n\t\treturn Math.round(a * b);\n\t}\n\n\tfunction makeColor(rgb:Array<Int>, ?adj:Float = 1):String {\n\t\treturn \"rgb(\" + mult(rgb[0], adj) + \",\" + mult(rgb[1], adj) + \",\" + mult(rgb[2], adj) + \")\";\n\t}\n\n\tstatic function main() {\n\t\tnew Main();\n\t}\n}"],
"names":[],
"mappings":";;WAYQ,WAAe;AAAA,CAAf;CACN,SAAqB,AAAK,+BAAgC;CAE1D,SAAS,WAAW;CAEpB,MAAM,6BAA8B,aACnC;AAAA,mBAAiB,UAAU;;CAG5B,YAAwB,AAAK,+BAAgC;CAC7D,cAAsB,mBAAY;CAElC,UAAU;CACV,aAAa;CACb,YAAY;CACZ,UAAU,eAAQ,SACX;CAEP,gBAAgB,eAAQ,UAChB,oBACD;CAGP,qBAAqB,CAAC;CACtB,oBAAoB,CAAC,OAAQ;CAC7B,wBAAwB,CAAC;CACzB,mBAAmB,CAAC;CAEpB,YAAY;CACZ,YAAY;CACZ,YAAY;CACZ,YAAY;CACZ,YAAY;CAEZ,gBAAgB;CAChB,sBAAsB;CACtB,WAAW,aAAc,YAAmC;AAAA,EAC3D,eAAe,kBAAkB,WAAW,YAAY;EACxD,wBAAwB,YAAY,WAAW;;CAEhD,WAAW,YAAa,aACvB;AAAA,qBAAmB,WAAW;;CAG/B,aAAa,CACZ,CAAC,GAAI,IAAK,IACV,CAAC,GAAI,GAAI,KACT,CAAC,IAAK,GAAI,IACV,CAAC,IAAK,GAAI,IACV,CAAC,GAAI,GAAI,KACT,CAAC,GAAI,IAAK;CAGX,wBAAwB;CACxB,WAAW,MAAO,aAAY;AAAA,EAC7B;EACA,EAAI,sBAAqB,eACxB;AAAA,uBAAoB;;EAErB,8BAA8B,iBAAU,OAAO;EAC/C,0BAA0B,iBAAU,OAAO,mBAAoB;;;YAY1D,WACN;AAAA;;;OATD,cACC;AAAA,SAAO,WAAW,IAAI;;aAGvB;AAAA;;;EACC,OAAO,SAAS,UAAK,IAAI,GAAI,OAAO,MAAM,UAAK,IAAI,GAAI,OAAO,MAAM,UAAK,IAAI,GAAI,OAAO;;;;;;"
}